<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.console.board.mapper.ReportMapper">

    <!-- 신고 정보 삽입 -->
    <insert id="insertReport" parameterType="com.console.board.dtos.ReportDto">
        INSERT INTO Report (target_id, reporter_id, target_type, reason, status)
        VALUES (#{targetId}, #{reporterId}, #{targetType}, #{reason}, #{status})
    </insert>

    <!-- 특정 유저가 특정 대상에 대해 신고했는지 확인 (중복 신고 방지 용도) -->
    <select id="countByReporterAndTarget" resultType="int" parameterType="map">
        SELECT COUNT(*)
        FROM Report
        WHERE reporter_id = #{reporterId} 
          AND target_id = #{targetId} 
          AND target_type = #{targetType}
    </select>

    <!-- 특정 상태의 모든 신고 조회 (예: PENDING 상태만 조회) -->
    <select id="getReportsByStatus" resultType="com.console.board.dtos.ReportDto" parameterType="string">
        SELECT report_id AS reportId,
               target_id AS targetId,
               reporter_id AS reporterId,
               target_type AS targetType,
               reason,
               status
        FROM Report
        WHERE status = #{status}
    </select>

    <update id="updateReportStatusAndSuspendedDays" parameterType="map">
    UPDATE Report
    SET status = #{status}, suspended_days = #{suspendedDays}
    WHERE report_id = #{reportId}
</update>

    
    <!-- 전체 리포트 수를 가져오기 -->
    <select id="countReports" resultType="int">
        SELECT COUNT(*) FROM Report
    </select>

	<select id="findReportsWithPostIds" parameterType="map" resultType="com.console.board.dtos.ReportDto">
    SELECT 
        r.report_id AS reportId,
        r.target_id AS targetId,
        r.reporter_id AS reporterId,
        r.target_type AS targetType,
        r.reason AS reason,
        r.status AS status,
        CASE 
            WHEN r.target_type = 'COMMENT' THEN c.post_id
            ELSE r.target_id
        END AS postId,
        r.suspended_days AS suspendedDays  <!-- Report 테이블에서 suspended_days 직접 가져오기 -->
    FROM 
        Report r
    LEFT JOIN 
        Comment c ON r.target_id = c.comment_id AND r.target_type = 'COMMENT'
    ORDER BY 
        r.report_id DESC
    LIMIT 
        #{limit} OFFSET #{offset}
</select>
   
    <!-- 신고된 유저의 ID를 찾는 메서드 -->
<select id="findReportedUserId" parameterType="map" resultType="int">
        SELECT 
            CASE 
                WHEN #{targetType} = 'POST' THEN (SELECT user_id FROM Post WHERE post_id = #{targetId})
                WHEN #{targetType} = 'COMMENT' THEN (SELECT user_id FROM Comment WHERE comment_id = #{targetId})
            END AS user_id
    </select>

</mapper>
