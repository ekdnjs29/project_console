<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.console.board.mapper.UserMapper">

    <!-- 유저 정보 삽입 -->
    <insert id="registerUser" parameterType="com.console.board.dtos.UserDto">
        INSERT INTO User (username, nickname, email, password, role)
        VALUES (#{username}, #{nickname}, #{email}, #{password}, #{role})
    </insert>

    <select id="findByUsername" resultType="com.console.board.dtos.UserDto" parameterType="string">
    	SELECT user_id AS userId, username, nickname, email, password, role
    	FROM User
    	WHERE username = #{username}
	</select>


    <!-- 아이디 중복 확인 -->
    <select id="countByUsername" resultType="int" parameterType="string">
        SELECT COUNT(*) FROM User WHERE username = #{username}
    </select>

    <!-- 이메일 중복 확인 -->
    <select id="countByEmail" resultType="int" parameterType="string">
        SELECT COUNT(*) FROM User WHERE email = #{email}
    </select>
    
   <!-- id로 닉네임 -->
    <select id="getUserById" parameterType="int" resultType="com.console.board.dtos.UserDto">
    SELECT user_id AS userId,
           username,
           nickname,
           email,
           password,
           role
    FROM user
    WHERE user_id = #{userId}
	</select>
	
<!-- 페이징 처리를 위한 모든 사용자 조회 -->
   <select id="findAll" resultType="com.console.board.dtos.UserDto">
    SELECT 
        u.user_id AS userId, 
        u.username, 
        u.nickname, 
        u.email, 
        u.role,
        CASE WHEN s.user_id IS NOT NULL THEN 1 ELSE 0 END AS suspended  <!-- suspended 필드 추가 -->
    FROM 
        User u
    LEFT JOIN 
        SuspendedUser s ON u.user_id = s.user_id
    ORDER BY 
        u.user_id DESC
    LIMIT #{limit} OFFSET #{offset}
</select>

    
    <!-- 전체 사용자 수 조회 -->
    <select id="countUsers" resultType="int">
        SELECT COUNT(*) FROM User
    </select>
    
    <update id="updateUserRole" parameterType="com.console.board.dtos.UserDto">
	    UPDATE User
	    SET role = #{role}
	    WHERE user_id = #{userId}
	</update>

</mapper>
