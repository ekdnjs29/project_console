<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.console.board.mapper.PostMapper">
    
    <!-- 모든 게시글 목록 조회 (작성자 닉네임 포함) -->
    <select id="getAllPosts" resultType="com.console.board.dtos.PostDto">
        SELECT p.post_id AS postId,
               p.user_id AS userId,
               u.nickname AS userNickname,  <!-- 작성자 닉네임 추가 -->
               p.title,
               p.content,
               p.comment_count AS commentCount,
               p.like_count AS likeCount,
               p.created_at AS createdAt
        FROM Post p
        JOIN User u ON p.user_id = u.user_id  <!-- User 테이블과 조인 -->
        ORDER BY p.created_at DESC
    </select>

    <!-- 특정 게시글 조회 -->
    <select id="getPostById" parameterType="int" resultType="com.console.board.dtos.PostDto">
        SELECT p.post_id AS postId,
               p.user_id AS userId,
               u.nickname AS userNickname,  <!-- 작성자 닉네임 추가 -->
               p.title,
               p.content,
               p.comment_count AS commentCount,
               p.like_count AS likeCount,
               p.created_at AS createdAt
        FROM Post p
        JOIN User u ON p.user_id = u.user_id  <!-- User 테이블과 조인 -->
        WHERE p.post_id = #{postId}
    </select>

    <!-- 특정 사용자의 게시글 목록 조회 -->
    <select id="findPostsByUserId" parameterType="int" resultType="com.console.board.dtos.PostDto">
	    SELECT p.post_id AS postId,
	           p.user_id AS userId,
	           u.nickname AS userNickname,  <!-- 작성자 닉네임 추가 -->
	           p.title,
	           p.content,
	           p.comment_count AS commentCount,
	           p.like_count AS likeCount,
	           p.created_at AS createdAt
	    FROM Post p
	    JOIN User u ON p.user_id = u.user_id  <!-- User 테이블과 조인 -->
	    WHERE p.user_id = #{userId}
	    ORDER BY p.created_at DESC
	</select>


    <!-- 새로운 게시글 추가 -->
    <insert id="insertPost" parameterType="com.console.board.dtos.PostDto" useGeneratedKeys="true" keyProperty="postId">
        INSERT INTO Post (user_id, title, content, comment_count, like_count, created_at)
        VALUES (#{userId}, #{title}, #{content}, #{commentCount}, #{likeCount}, #{createdAt})
    </insert>

    <!-- 게시글 수정 -->
    <update id="updatePost" parameterType="com.console.board.dtos.PostDto">
        UPDATE Post
        SET title = #{title}, content = #{content}
        WHERE post_id = #{postId}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deletePost" parameterType="int">
        DELETE FROM Post WHERE post_id = #{postId}
    </delete>

</mapper>
